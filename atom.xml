<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zlinni&#39;s Blog For Study</title>
  
  <subtitle>一个专门做笔记的博客</subtitle>
  <link href="https://zlinni.github.io/atom.xml" rel="self"/>
  
  <link href="https://zlinni.github.io/"/>
  <updated>2021-11-30T09:13:06.495Z</updated>
  <id>https://zlinni.github.io/</id>
  
  <author>
    <name>Zlinni</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jquery</title>
    <link href="https://zlinni.github.io/2021/11/30/Jquery/"/>
    <id>https://zlinni.github.io/2021/11/30/Jquery/</id>
    <published>2021-11-30T09:05:02.000Z</published>
    <updated>2021-11-30T09:13:06.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><h3 id="jQuery概述"><a href="#jQuery概述" class="headerlink" title="jQuery概述"></a>jQuery概述</h3><ul><li>jQuery是一个js库，封装了很多方法和函数</li><li>j是JavaScript；Query是查询，意思是查询js，把js中的dom做封装可以快速使用里面的功能</li></ul><h3 id="jQuery的基本使用"><a href="#jQuery的基本使用" class="headerlink" title="jQuery的基本使用"></a>jQuery的基本使用</h3><h4 id="jQuery的入口函数"><a href="#jQuery的入口函数" class="headerlink" title="jQuery的入口函数"></a>jQuery的入口函数</h4><ul><li><p>基本语法$(‘xxx’).xxx</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).hide();</span><br></pre></td></tr></table></figure></li><li><p>页面执行代码的顺序DOM→js，两种方法解决</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">会等待页面DOM加载完之后在执行js</span><br><span class="line">第一种</span><br><span class="line">$(<span class="built_in">document</span>).reday(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    xxx;</span><br><span class="line">&#125;) </span><br><span class="line">第二种</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  xxx;   </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="jQuery的顶级对象"><a href="#jQuery的顶级对象" class="headerlink" title="jQuery的顶级对象"></a>jQuery的顶级对象</h4><ul><li>$是jQuery的顶级对象</li><li>可以代表jQuery 简而言之写的时候两者可以互换</li></ul><h4 id="jQuery对象和DOM对象"><a href="#jQuery对象和DOM对象" class="headerlink" title="jQuery对象和DOM对象"></a>jQuery对象和DOM对象</h4><ul><li><p>用原生js获取过来的对象叫做dom对象，dom对象只能使用原生的js方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsduixiang = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;div&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>用jQuery方法获取过来的对象是jQuery对象，本质是通过$把dom元素进行了包装，且也只能使用jQuery方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>dom对象转换成jQuery对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接调用</span><br><span class="line">$(dom对象)</span><br><span class="line">$(<span class="string">&#x27;video&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>jQuery对象转换成dom对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span> $(xxx)[index]</span><br><span class="line">原因是他是伪数组</span><br><span class="line">$(<span class="string">&#x27;video&#x27;</span>)[<span class="number">0</span>].play()</span><br><span class="line">方法<span class="number">2</span> $(xxx).get(<span class="number">0</span>).play()</span><br></pre></td></tr></table></figure></li></ul><h3 id="jQuery-常用API"><a href="#jQuery-常用API" class="headerlink" title="jQuery 常用API"></a>jQuery 常用API</h3><h4 id="jQuery基础选择器"><a href="#jQuery基础选择器" class="headerlink" title="jQuery基础选择器"></a>jQuery基础选择器</h4><ul><li><p>获取标准 $(‘选择器’) 里面选择器直接写css选择器</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">id选择器 $(<span class="string">&quot;#id&quot;</span>)</span><br><span class="line">全选择器 $(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">类选择器 $(<span class="string">&quot;.class&quot;</span>)</span><br><span class="line">标签选择器 $(<span class="string">&quot;div&quot;</span>)</span><br><span class="line">并集选择器 $(<span class="string">&quot;div,p,li&quot;</span>)</span><br><span class="line">交集选择器 $(<span class="string">&quot;li.current&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="jQuery层级选择器"><a href="#jQuery层级选择器" class="headerlink" title="jQuery层级选择器"></a>jQuery层级选择器</h4><ul><li><p>例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">子代选择器 $(<span class="string">&quot;ul&gt;li&quot;</span>)</span><br><span class="line">后代选择器 $(<span class="string">&quot;ul li&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="jQuery设置样式"><a href="#jQuery设置样式" class="headerlink" title="jQuery设置样式"></a>jQuery设置样式</h4><ul><li><p>例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;div&#x27;</span>).css(<span class="string">&#x27;属性&#x27;</span>,<span class="string">&#x27;值&#x27;</span>)</span><br><span class="line">$(<span class="string">&#x27;div&#x27;</span>).css(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="隐式迭代"><a href="#隐式迭代" class="headerlink" title="隐式迭代"></a>隐式迭代</h4><ul><li>遍历内部的DOM元素的过程叫做隐式迭代</li></ul><h4 id="jQuery筛选选择器"><a href="#jQuery筛选选择器" class="headerlink" title="jQuery筛选选择器"></a>jQuery筛选选择器</h4><ul><li><p>例子</p><table><thead><tr><th>语法</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>:first</td><td>$(‘li:first’)</td><td>获取第一个li元素</td></tr><tr><td>:last</td><td>$(‘li:last’)</td><td>获取最后一个li元素</td></tr><tr><td>:eq(index)</td><td>$(‘li:eq(2)’)</td><td>获取到的li元素中选择引号为2的元素，索引从0开始</td></tr><tr><td>:odd</td><td>$(‘li:odd’)</td><td>获取到索引号为奇数的元素</td></tr><tr><td>:even</td><td>$(‘li:even’)</td><td>获取到索引号为偶数的元素</td></tr></tbody></table></li><li><p>注意 其中的：first是获取第一个xx元素 而不是yy元素下面第一个xx元素</p></li></ul><h4 id="jQuery筛选方法"><a href="#jQuery筛选方法" class="headerlink" title="jQuery筛选方法"></a>jQuery筛选方法</h4><ul><li><p>例子</p><table><thead><tr><th>语法</th><th>用法</th><th>说明</th></tr></thead><tbody><tr><td>parent()</td><td>$(“li”).parent()</td><td>查找父级</td></tr><tr><td>children(selector)</td><td>$(“ul”).children(“li”)</td><td>相当于$(“ul&gt;li”)最近一级亲儿子</td></tr><tr><td>find(selector)</td><td>$(“ul”).find(“li”)</td><td>相当于$(“ul li”) 后代选择器</td></tr><tr><td>siblings(selector)</td><td>$(“.first”).siblings(“li”)</td><td>查找兄弟节点不包括自己本身</td></tr><tr><td>nextAll([expr])</td><td>$(“.first”).nextAll()</td><td>查找当前元素之后的所有同辈元素</td></tr><tr><td>prevAll([expr])</td><td>$(“.last”).prevAll()</td><td>查找当前元素之前的所有同辈元素</td></tr><tr><td>hasClass(class)</td><td>$(“div”).hasClass(“protected”)</td><td>检查当前元素是否有某个特定的类名 如果有则返回true</td></tr><tr><td>eq(index)</td><td>$(“li”).eq(2)</td><td>相当于$(“li:eq(2)”) index从0开始</td></tr></tbody></table></li></ul><h4 id="jQuery排他思想"><a href="#jQuery排他思想" class="headerlink" title="jQuery排他思想"></a>jQuery排他思想</h4><ul><li>通过隐式迭代的方式省去循环遍历以及循环绑定事件</li><li>例子<img src="C:\Users\Zlinni\AppData\Roaming\Typora\typora-user-images\image-20211112170315535.png" alt="image-20211112170315535"></li><li>案例淘宝服饰精品 点击哪个 哪个显示 其余的不显示<img src="C:\Users\Zlinni\AppData\Roaming\Typora\typora-user-images\image-20211112200614264.png" alt="image-20211112200614264"></li><li>代码<img src="C:\Users\Zlinni\AppData\Roaming\Typora\typora-user-images\image-20211112200649688.png" alt="image-20211112200649688"></li></ul><h4 id="链式编程"><a href="#链式编程" class="headerlink" title="链式编程"></a>链式编程</h4><ul><li><p>为了方便写</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现功能：点击其中一个按钮，点中的按钮变色，其他不变</span></span><br><span class="line">      <span class="comment">// 隐式迭代</span></span><br><span class="line">      <span class="comment">// 新增链式编程 </span></span><br><span class="line">      $(<span class="string">&#x27;button&#x27;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;            $(<span class="built_in">this</span>).css(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>).siblings().css(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="jQuery修改css样式方法"><a href="#jQuery修改css样式方法" class="headerlink" title="jQuery修改css样式方法"></a>jQuery修改css样式方法</h4><ul><li><p>参数只写属性名字则返回属性值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;div&quot;</span>).css(<span class="string">&quot;color&quot;</span>));</span><br></pre></td></tr></table></figure></li><li><p>参数的值如果是数字可以不用加引号</p></li><li><p>参数可以是对象形式 采用中括号的方法 方便设置多组样式 使用的时候属性名和属性值要用引号隔开，且属性名可以不用加引号</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方式一</span><br><span class="line">$(<span class="string">&quot;div&quot;</span>).css(&#123;<span class="attr">width</span>:<span class="number">100</span>,<span class="attr">height</span>:<span class="number">100</span>,<span class="attr">background</span>:<span class="string">&quot;pink&quot;</span>&#125;);</span><br><span class="line">方式二</span><br><span class="line">$(<span class="string">&quot;div&quot;</span>).css(&#123;</span><br><span class="line"><span class="attr">width</span>:<span class="number">200</span>,</span><br><span class="line"><span class="attr">height</span>:<span class="number">500</span>,</span><br><span class="line"><span class="attr">backgroundColor</span>:<span class="string">&quot;blue&quot;</span></span><br><span class="line">注意如果是复合属性参考原生js采用驼峰命名法，而且此时的属性值记得双引号</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="设置类样式"><a href="#设置类样式" class="headerlink" title="设置类样式"></a>设置类样式</h4><ul><li><p>方法作用等同于以前的classList ，可以用来操作类样式，注意里面的参数不要加点</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>添加类</span><br><span class="line">$(<span class="built_in">this</span>).addClass(<span class="string">&quot;current&quot;</span>)</span><br><span class="line"><span class="number">2.</span>移除类</span><br><span class="line">$(<span class="built_in">this</span>).removeClass(<span class="string">&quot;current&quot;</span>)</span><br><span class="line"><span class="number">3.</span>切换类</span><br><span class="line">$(<span class="built_in">this</span>).toggleClass(<span class="string">&quot;current&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>add和remove都是在原先的基础上追加/删除</p></li></ul><h4 id="动画方法"><a href="#动画方法" class="headerlink" title="动画方法"></a>动画方法</h4><ul><li><p>show() hide() toggle()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.点击缓慢显示</span></span><br><span class="line">       $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $(<span class="string">&quot;div&quot;</span>).show(<span class="number">1000</span>);</span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="comment">//2.点击缓慢隐藏</span></span><br><span class="line">       $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $(<span class="string">&quot;div&quot;</span>).hide(<span class="number">1000</span>);</span><br><span class="line">       &#125;)</span><br><span class="line">       <span class="comment">//3.点击缓慢切换</span></span><br><span class="line">       $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $(<span class="string">&quot;div&quot;</span>).toggle(<span class="number">1000</span>);</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure></li><li><p>slideUp() slideDown() slideToggle()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//4.上拉</span></span><br><span class="line">      $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">3</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $(<span class="string">&quot;div&quot;</span>).slideUp(<span class="number">1000</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="comment">//5.下拉</span></span><br><span class="line">      $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">4</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $(<span class="string">&quot;div&quot;</span>).slideDown(<span class="number">1000</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">     <span class="comment">//  6.切换拉</span></span><br><span class="line">     $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">5</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $(<span class="string">&quot;div&quot;</span>).slideToggle(<span class="number">1000</span>);</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure></li><li><p>mouseover鼠标经过 mouseout鼠标离开</p></li><li><p>事件切换hover(function(){},function(){}) 两个function相当于mouseover和mouseout，如果只写一个函数则鼠标经过和离开都会触发这个函数</p></li><li><p>淡入淡出效果fadeIn fadeOut fadeToggle </p></li><li><p>变化到透明度fadeTo 注意写透明度 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">0</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              $(<span class="string">&quot;div&quot;</span>).fadeIn(<span class="number">1000</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">          $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">1</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              $(<span class="string">&quot;div&quot;</span>).fadeOut(<span class="number">1000</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">          $(<span class="string">&quot;button&quot;</span>).eq(<span class="number">2</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">              $(<span class="string">&quot;div&quot;</span>).fadeToggle(<span class="number">1000</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;)</span><br></pre></td></tr></table></figure></li><li><p>高亮显示案例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> <span class="title">gaoliang</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.container div&quot;</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="built_in">this</span>).siblings().stop().fadeTo(<span class="number">1000</span>,<span class="number">0.5</span>);</span><br><span class="line">        &#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="built_in">this</span>).siblings().stop().fadeTo(<span class="number">1000</span>,<span class="number">1</span>);</span><br><span class="line">  </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="动画停止"><a href="#动画停止" class="headerlink" title="动画停止"></a>动画停止</h4><ul><li><p>动画效果一旦触发就会执行 但如果多次触发就会造成多个动画或者效果排队执行</p></li><li><p>停止排队的方法stop() 需要写在动画或者效果前面 这样的话相当于停止上一次动画 就不会造成资源上的浪费</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">this</span>).stop().slideToggle(<span class="number">1000</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="animate使用"><a href="#animate使用" class="headerlink" title="animate使用"></a>animate使用</h4><ul><li><p>animate({属性名,属性值},时间)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $(<span class="string">&quot;div&quot;</span>).animate(&#123;</span><br><span class="line">               <span class="attr">left</span>:<span class="number">500</span>,</span><br><span class="line">               <span class="attr">top</span>:<span class="number">500</span>,</span><br><span class="line">               <span class="attr">opacity</span>:<span class="number">.4</span></span><br><span class="line">           &#125;,<span class="number">500</span>)</span><br><span class="line">       &#125;)</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="获取元素属性值"><a href="#获取元素属性值" class="headerlink" title="获取元素属性值"></a>获取元素属性值</h4><ul><li><p>获取元素固有属性prop()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取a的固有属性值</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;a&quot;</span>).prop(<span class="string">&quot;href&quot;</span>));</span><br></pre></td></tr></table></figure></li><li><p>给元素的固有属性赋值prop(“属性名”,”属性值”)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;a&quot;</span>).prop(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;bbb&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>获取元素的自定义属性attr()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;div&quot;</span>).attr(<span class="string">&quot;index&quot;</span>));</span><br></pre></td></tr></table></figure></li><li><p>给元素的自定义属性赋值(“属性名”,”属性值”)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).attr(<span class="string">&quot;index&quot;</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure></li><li><p>数据缓存data()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">假设有</span><br><span class="line">&lt;span&gt;<span class="number">111</span>&lt;/span&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-index</span>=<span class="string">&quot;1&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;span&quot;</span>).data(<span class="string">&quot;bianliang&quot;</span>,<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;span&quot;</span>).data(<span class="string">&quot;bianliang&quot;</span>));</span><br><span class="line">则打印出aaa</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;div&quot;</span>).data(<span class="string">&quot;index&quot;</span>));</span><br><span class="line">则打印出<span class="number">1</span></span><br><span class="line"></span><br><span class="line">data()方法可以缓存数据 但dom里面不会显示出来</span><br><span class="line">data()方法可以直接读取h5的属性 并且参数不用写成data- 读出来的变量也是数字型</span><br></pre></td></tr></table></figure></li><li><p>案例全选按钮</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">点击全选按钮 其他三个按钮的状态随之变化</span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;selectAll&quot;</span>&gt;全选</span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;j-check&quot;</span>&gt;商品<span class="number">1</span></span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;j-check&quot;</span>&gt;商品<span class="number">2</span></span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;j-check&quot;</span> &gt;商品<span class="number">3</span></span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;&quot;</span> id=<span class="string">&quot;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;selectAll&quot;</span>&gt;全选</span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    要想获取checked属性 必须伴随着按钮状态的变化</span><br><span class="line">$(<span class="string">&quot;.selectAll&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        利用并集选择器将其他的selectAll也给绑定上</span><br><span class="line">        $(<span class="string">&quot;j-checked, .selectAll&quot;</span>).prop(<span class="string">&quot;checked&quot;</span>,$(<span class="built_in">this</span>).prop(<span class="string">&quot;checked&quot;</span>));</span><br><span class="line">    &#125;)</span><br><span class="line">    情况<span class="number">2</span> 如果此时除了全选框之外的复选框都被勾上，全选框也应该变化成为勾上</span><br><span class="line">    找出页面中所有选择框的数量</span><br><span class="line">    <span class="keyword">var</span> jchecknum = $(<span class="string">&quot;.j-check&quot;</span>).length;</span><br><span class="line">    $(<span class="string">&quot;.j-check&quot;</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>($(<span class="string">&quot;.j-check:checked&quot;</span>).length == jchecknum)&#123;</span><br><span class="line">             $(<span class="string">&quot;.selectAll&quot;</span>).prop(<span class="string">&quot;checked&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             $(<span class="string">&quot;.selectAll&quot;</span>).prop(<span class="string">&quot;checked&quot;</span>,<span class="literal">false</span>);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="修改元素文本内容"><a href="#修改元素文本内容" class="headerlink" title="修改元素文本内容"></a>修改元素文本内容</h4><ul><li><p>获取设置元素内容html()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">获取设置元素内容html()</span><br><span class="line">     html()方法是直接修改里面的元素内容并且覆盖原先的</span><br><span class="line">     <span class="built_in">console</span>.log($(<span class="string">&quot;div&quot;</span>).html());</span><br><span class="line">     $(<span class="string">&quot;div&quot;</span>).html(<span class="string">&quot;leb猪啊&quot;</span>);</span><br><span class="line">     $(<span class="string">&quot;div&quot;</span>).html(<span class="string">&quot;&lt;span&gt;aaa&lt;/span&gt;&quot;</span>);</span><br><span class="line">     $(<span class="string">&quot;div&quot;</span>).html(<span class="string">&quot;&lt;span&gt;aaa&lt;/span&gt;&quot;</span>);</span><br><span class="line">     覆盖了 只会输出一个</span><br><span class="line">     </span><br><span class="line">     <span class="built_in">console</span>.log($(<span class="string">&quot;div&quot;</span>).html());</span><br></pre></td></tr></table></figure></li><li><p>获取设置元素文本内容text()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;div&quot;</span>).text());</span><br><span class="line">     $(<span class="string">&quot;div&quot;</span>).text(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">     $(<span class="string">&quot;div&quot;</span>).text(<span class="string">&quot;&lt;p&gt;aa&lt;/p&gt;&quot;</span>);<span class="comment">//无法添加标签 只能对文本进行改变</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>获取设置表单值val()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;input&quot;</span>).val());</span><br><span class="line">      $(<span class="string">&quot;input&quot;</span>).val(<span class="string">&quot;leb dsb&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>案例增减商品数量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">       <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;jianhao&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">       <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;jiahao&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">   &lt;div&gt;</span><br><span class="line">       &lt;button class=&quot;jianhao&quot;&gt;-&lt;/button&gt;</span><br><span class="line">       &lt;input type=&quot;text&quot; class=&quot;count&quot; value=&quot;1&quot;&gt;</span><br><span class="line">       &lt;button class=&quot;jiahao&quot;&gt;+&lt;/but&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">   &lt;script&gt;</span><br><span class="line">       // 要点 只增加本商品的数量，就是点击加号之后兄弟文本框count的值</span><br><span class="line">       $(function()&#123;</span><br><span class="line">           $(&quot;.jiahao&quot;).click(function()&#123;</span><br><span class="line">               var countnum = $(this).siblings(&quot;.count&quot;).val();</span><br><span class="line">               console.log(countnum);</span><br><span class="line">               countnum++;</span><br><span class="line">               $(this).siblings(&quot;.count&quot;).val(countnum);</span><br><span class="line">           &#125;)</span><br><span class="line">           $(&quot;.jianhao&quot;).click(function()&#123;</span><br><span class="line">               var countnum = $(this).siblings(&quot;.count&quot;).val();</span><br><span class="line">               countnum--;</span><br><span class="line">               if(countnum&lt;1)&#123;</span><br><span class="line">                   countnum=1;</span><br><span class="line">               &#125;</span><br><span class="line">               $(this).siblings(&quot;.count&quot;).val(countnum);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;)</span><br><span class="line">       </span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>案例修改商品小计</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;singalprice&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>单价:<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2.13<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;jianhao&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;jiahao&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;totalprice&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>总价:<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2.13<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;ul class=&quot;singalprice&quot;&gt;</span><br><span class="line">        &lt;li&gt;单价:&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;22.1&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;button class=&quot;jianhao&quot;&gt;-&lt;/button&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; class=&quot;count&quot; value=&quot;1&quot;&gt;</span><br><span class="line">    &lt;button class=&quot;jiahao&quot;&gt;+&lt;/button&gt;</span><br><span class="line">    &lt;ul class=&quot;totalprice&quot;&gt;</span><br><span class="line">        &lt;li&gt;总价:&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;22.1&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">     </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // 要点 只增加本商品的数量，就是点击加号之后兄弟文本框count的值</span><br><span class="line">    $(function()&#123;</span><br><span class="line">        $(&quot;.jiahao&quot;).click(function()&#123;</span><br><span class="line">            var countnum = $(this).siblings(&quot;.count&quot;).val();</span><br><span class="line">            var sprice = $(this).siblings(&quot;.singalprice&quot;).find(&quot;li&quot;).eq(1).text();</span><br><span class="line">            countnum++;</span><br><span class="line">            sprice *= countnum;</span><br><span class="line">            console.log(sprice);</span><br><span class="line">            $(this).siblings(&quot;.count&quot;).val(countnum);</span><br><span class="line">            $(this).siblings(&quot;.totalprice&quot;).find(&quot;li&quot;).eq(1).text(sprice);</span><br><span class="line">  </span><br><span class="line">        &#125;)</span><br><span class="line">        $(&quot;.jianhao&quot;).click(function()&#123;</span><br><span class="line">            var countnum = $(this).siblings(&quot;.count&quot;).val();</span><br><span class="line">            var sprice = $(this).siblings(&quot;.singalprice&quot;).find(&quot;li&quot;).eq(1).text();</span><br><span class="line">            countnum--;</span><br><span class="line">            if(countnum&lt;1)&#123;</span><br><span class="line">                countnum=1;</span><br><span class="line">            &#125;</span><br><span class="line">            sprice *= countnum;</span><br><span class="line">            $(this).siblings(&quot;.count&quot;).val(countnum);</span><br><span class="line">            $(this).siblings(&quot;.totalprice&quot;).find(&quot;li&quot;).eq(1).text(sprice);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="祖先选择器"><a href="#祖先选择器" class="headerlink" title="祖先选择器"></a>祖先选择器</h4><ul><li><p>$(“xxx”).parents(“.zuxian”) 返回指定祖先</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;one&quot;</span>&gt;</span><br><span class="line">        <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;four&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    </span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">console</span>.log($(<span class="string">&quot;.four&quot;</span>).parents(<span class="string">&quot;.one&quot;</span>));</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul><h4 id="保留小数"><a href="#保留小数" class="headerlink" title="保留小数"></a>保留小数</h4><ul><li><p>toFix(位数)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">33.336</span>.toFixed(<span class="number">2</span>);</span><br><span class="line">answer = <span class="number">33.34</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="遍历元素"><a href="#遍历元素" class="headerlink" title="遍历元素"></a>遍历元素</h4><ul><li><p>each(index,dom)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">var</span> arr = [<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>,<span class="string">&quot;blue&quot;</span>];</span><br><span class="line">           $(<span class="string">&quot;div&quot;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,dom</span>)</span>&#123;</span><br><span class="line">               $(dom).css(<span class="string">&quot;color&quot;</span>,arr[i]);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure></li><li><p>each()遍历数组，遍历对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  each遍历数组</span></span><br><span class="line">          $.each(arr,<span class="function"><span class="keyword">function</span>(<span class="params">i,ele</span>)</span>&#123;</span><br><span class="line">              <span class="built_in">console</span>.log(i);</span><br><span class="line">              <span class="built_in">console</span>.log(ele);</span><br><span class="line">          &#125;)</span><br><span class="line">         <span class="comment">//  each遍历对象</span></span><br><span class="line">         $.each(&#123;</span><br><span class="line">             <span class="attr">name</span>:<span class="string">&quot;leb&quot;</span>,</span><br><span class="line">             <span class="attr">sex</span>:<span class="string">&quot;female&quot;</span>,</span><br><span class="line">             <span class="attr">hobbies</span>:<span class="string">&quot;balabababababa&quot;</span></span><br><span class="line">         &#125;,<span class="function"><span class="keyword">function</span>(<span class="params">i,ele</span>)</span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(i+<span class="string">&quot;:&quot;</span>+ele);</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="添加和删除元素"><a href="#添加和删除元素" class="headerlink" title="添加和删除元素"></a>添加和删除元素</h4><ul><li><p>添加元素 两种方式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">在节点内部添加</span><br><span class="line"><span class="keyword">var</span> li = $(&lt;li&gt;aa&lt;/li&gt;);</span><br><span class="line">在节点内部的前面添加</span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).prepend(li);</span><br><span class="line">在节点内部的后面添加</span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).append(li);</span><br><span class="line"></span><br><span class="line">在节点外部添加</span><br><span class="line"><span class="keyword">var</span> div = $(<span class="string">&quot;&lt;div&gt;我是div&lt;/div&gt;&quot;</span>);</span><br><span class="line">在节点外部的前面添加</span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).before(div);</span><br><span class="line">在节点外部的后面添加</span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).after(div);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>删除元素的三种方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">remove() 自杀法</span><br><span class="line">empty() 杀掉除了自己之外的</span><br><span class="line">html(<span class="string">&quot;&quot;</span>) 同上</span><br></pre></td></tr></table></figure></li></ul><h4 id="获取元素大小i"><a href="#获取元素大小i" class="headerlink" title="获取元素大小i"></a>获取元素大小i</h4><ul><li><p>width() 和 height()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可以直接获取</span><br><span class="line">也可以在里面输入数字设置 不用带单位</span><br></pre></td></tr></table></figure></li><li><p>innerWidth() innerHeight() 获取除自身之外的padding</p></li><li><p>outerWidth() outerHeight() 获取除了自身之外的border</p></li><li><p>outerWidth(true) outerHeight(true) 获取除自身之外的 padding margin border</p></li><li><p>参数为空返回数字型 参数为数字修改相应值</p></li></ul><h4 id="元素位置"><a href="#元素位置" class="headerlink" title="元素位置"></a>元素位置</h4><ul><li><p>offset() 获取设置距离文档的位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;.son&quot;</span>).offset());</span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;.son&quot;</span>).offset().top);</span><br></pre></td></tr></table></figure></li><li><p>设置偏移量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.son&quot;</span>).offset(&#123;</span><br><span class="line">          <span class="attr">top</span>:<span class="number">200</span>,</span><br><span class="line">          <span class="attr">left</span>:<span class="number">200</span></span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure></li><li><p>获取距离带有定位父级位置的偏移 position 如果没有定位则以文档为准，且该方法只能获取 不能改变</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log($(<span class="string">&quot;.son&quot;</span>).position());</span><br></pre></td></tr></table></figure></li></ul><h4 id="被卷去的头部"><a href="#被卷去的头部" class="headerlink" title="被卷去的头部"></a>被卷去的头部</h4><ul><li><p>页面滚动事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>被卷去的头部与被卷去的左侧</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scrollTop();</span><br><span class="line">scrollLeft();</span><br><span class="line">可以直接设置数字 那么在页面打开的时候就会直接滑动到指定的位置</span><br></pre></td></tr></table></figure></li><li><p>设置一个小功能 当页面移动到某个位置时候显示返回顶部的盒子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">var</span> boxTop = $(<span class="string">&quot;.container&quot;</span>).offset().top;</span><br><span class="line">           $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               <span class="built_in">console</span>.log($(<span class="built_in">document</span>).scrollTop());</span><br><span class="line">               <span class="keyword">if</span>($(<span class="built_in">document</span>).scrollTop()&gt;=boxTop)&#123;</span><br><span class="line">                   <span class="comment">//此时container已经在最顶部</span></span><br><span class="line">                   $(<span class="string">&quot;.back&quot;</span>).fadeIn();</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   $(<span class="string">&quot;.back&quot;</span>).fadeOut();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;) </span><br></pre></td></tr></table></figure></li><li><p>注意 window是整个滚动事件的对象 而scrollTop的对象是document</p></li><li><p>再做个点击返回顶部的功能</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.back&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               <span class="comment">// $(document).scrollTop(0);</span></span><br><span class="line">               <span class="comment">//这样可以实现回到顶部的功能但是没有动画效果</span></span><br></pre></td></tr></table></figure></li><li><p>于是想到使用animate做动画 但animate是针对==元素==进行操作的方法，所以对象不是document而是body和html</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;body,html&quot;</span>).stop().animate(&#123;</span><br><span class="line">                  <span class="attr">scrollTop</span>:<span class="number">0</span></span><br><span class="line">              &#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="on绑定事件"><a href="#on绑定事件" class="headerlink" title="on绑定事件"></a>on绑定事件</h4><ul><li><p>利用on绑定多个事件 其输入格式为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.example&quot;</span>).on(&#123;</span><br><span class="line">    <span class="attr">mouseenter</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; $(<span class="built_in">this</span>).css(<span class="string">&quot;background&quot;</span>,<span class="string">&quot;blue&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>相反的触发方式执行同一函数的方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.example&quot;</span>).on(<span class="string">&quot;mouseenter mouseleave&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">xxx</span><br><span class="line">&#125;)</span><br><span class="line">注意两个事件之间加空格</span><br></pre></td></tr></table></figure></li></ul><h4 id="on事件委派"><a href="#on事件委派" class="headerlink" title="on事件委派"></a>on事件委派</h4><ul><li><p>on还可以实现事件委派：给父元素绑定一个事件，在操作其某个子元素时生效 且this指代的是委托的子元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">语法格式是$(<span class="string">&quot;父元素&quot;</span>).on(<span class="string">&quot;事件类型&quot;</span>,<span class="string">&quot;子元素&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">xxx;</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="string">&quot;li&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                alert(<span class="number">111</span>);</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure></li><li><p>与此同时 on委派的事件还可以对动态生成的元素进行操作</p></li></ul><h4 id="off解绑事件"><a href="#off解绑事件" class="headerlink" title="off解绑事件"></a>off解绑事件</h4><ul><li><p>解除某个元素上面的触发事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;元素&quot;</span>).off(<span class="string">&quot;click&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>解除事件委托</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;ul&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="string">&quot;li&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">&quot;ul&quot;</span>).off(<span class="string">&quot;click&quot;</span>,<span class="string">&quot;li&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h4 id="one只触发一次事件"><a href="#one只触发一次事件" class="headerlink" title="one只触发一次事件"></a>one只触发一次事件</h4><ul><li><p>和on差不多 但只触发一次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;li&quot;</span>).one(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="string">&quot;xxxxxxx&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h4 id="自动触发事件trigger"><a href="#自动触发事件trigger" class="headerlink" title="自动触发事件trigger"></a>自动触发事件trigger</h4><ul><li><p>自动触发事件的前提是事件有绑定</p></li><li><p>方式一 元素.事件 会触发元素的默认行为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).click()</span><br></pre></td></tr></table></figure></li><li><p>方式二 元素.trigger(“触发事件”) 会触发元素的默认行为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).trigger(<span class="string">&quot;click&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>方式三 元素.triggerHandler(“触发事件”) 不会触发元素的默认行为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).triggerHandler(<span class="string">&quot;click&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h4 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h4><ul><li><p>事件触发就会有事件对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;div&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(event);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>阻止事件冒泡 stopPropagation()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    cl(<span class="string">&quot;点击了xxx&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">&quot;div&quot;</span>).on(<span class="string">&quot;click&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    cl(<span class="string">&quot;点击了div&quot;</span>);</span><br><span class="line">    event.stopPropagation();</span><br><span class="line">&#125;)</span><br><span class="line">此时只会cl “点击了div”</span><br><span class="line">而不会cl 点击了xxx</span><br><span class="line">因为阻止了事件冒泡</span><br></pre></td></tr></table></figure></li></ul><h4 id="对象拷贝"><a href="#对象拷贝" class="headerlink" title="对象拷贝"></a>对象拷贝</h4><ul><li><p>浅拷贝 $.extend(“目标对象”,”拷贝对象”)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">id</span>:<span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">id</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;andy&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line">$.extend(obj1,obj2);</span><br></pre></td></tr></table></figure></li><li><p>浅拷贝会将原来对象里面的复杂数据类型地址拷贝给目标对象</p></li><li><p>所以如果修改了目标对象的属性 原来对象中的属性也会随之修改</p></li><li><p>深拷贝$.extend(true,”目标对象”,”拷贝对象”)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">id</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">msg</span>: &#123;</span><br><span class="line">            <span class="attr">sex</span>:<span class="string">&quot;男&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">id</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;andy&quot;</span>,</span><br><span class="line">    <span class="attr">msg</span>: &#123;</span><br><span class="line">            <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line">$.extend(<span class="literal">true</span>,obj1,obj2);</span><br><span class="line">obj1.msg.age = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj2);</span><br><span class="line"><span class="built_in">console</span>.log(obj1);</span><br></pre></td></tr></table></figure></li><li><p>深拷贝会将原来对象的属性完全拷贝一份给目标对象</p></li><li><p>但如果目标对象中有不冲突的属性 则会合并该属性</p></li></ul><h4 id="多库共存"><a href="#多库共存" class="headerlink" title="多库共存"></a>多库共存</h4><ul><li><p>因为$符号有时候会导致冲突 所以jquery提供一种方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将所有的$符号替换成 jQuery</span><br><span class="line">eg</span><br><span class="line">jQuery(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>第二种方法 jquery释放对$的控制权 让用户自己决定</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xx = $.noConflict();</span><br></pre></td></tr></table></figure></li></ul><h4 id="jQuery插件"><a href="#jQuery插件" class="headerlink" title="jQuery插件"></a>jQuery插件</h4><ul><li>ex<img src="C:\Users\Zlinni\AppData\Roaming\Typora\typora-user-images\image-20211119204501828.png" alt="image-20211119204501828"></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;jQuery&quot;&gt;&lt;a href=&quot;#jQuery&quot; class=&quot;headerlink&quot; title=&quot;jQuery&quot;&gt;&lt;/a&gt;jQuery&lt;/h2&gt;&lt;h3 id=&quot;jQuery概述&quot;&gt;&lt;a href=&quot;#jQuery概述&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="前端进阶" scheme="https://zlinni.github.io/categories/%E5%89%8D%E7%AB%AF%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="Jquery" scheme="https://zlinni.github.io/tags/Jquery/"/>
    
  </entry>
  
  <entry>
    <title>CSS</title>
    <link href="https://zlinni.github.io/2021/11/30/CSS/"/>
    <id>https://zlinni.github.io/2021/11/30/CSS/</id>
    <published>2021-11-30T08:34:25.000Z</published>
    <updated>2021-11-30T08:37:20.389Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><ul><li>该笔记用百度脑图制作而成，图片如下：<img src="naotu.png" alt="naotu"><br>参考链接: <a href="http://naotu.baidu.com/file/ffff52457c20c717cc7b21def7361808?token=8fbc79fd5c6cc578">http://naotu.baidu.com/file/ffff52457c20c717cc7b21def7361808?token=8fbc79fd5c6cc578</a><br>若链接失效 建议私信</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;该笔记用百度脑图制作而成，图片如下：&lt;img src=&quot;naotu.png&quot; alt=&quot;naotu&quot;&gt;&lt;br&gt;参考链接:</summary>
      
    
    
    
    <category term="前端基础" scheme="https://zlinni.github.io/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="css" scheme="https://zlinni.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>HTML</title>
    <link href="https://zlinni.github.io/2021/11/30/HTML/"/>
    <id>https://zlinni.github.io/2021/11/30/HTML/</id>
    <published>2021-11-30T03:14:36.000Z</published>
    <updated>2021-11-30T08:38:53.960Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Hyper Text Makeup Language 超文本标记语言</li><li>加入了图片，声音，动画，多媒体等内容</li><li>从一个文件跳转到另一个文件，与世界各地主机的文件连接</li></ul><h2 id="文件连接"><a href="#文件连接" class="headerlink" title="文件连接"></a>文件连接</h2><ul><li>不是编程语言 而是一种标记语言 makeup language</li><li>标记语言也是一套标记标签</li></ul><h2 id="常用浏览器"><a href="#常用浏览器" class="headerlink" title="常用浏览器"></a>常用浏览器</h2><ul><li>ie 火狐 谷歌 edge safari opera 被称为五大浏览器</li><li>浏览器内核： 一种渲染引擎，读取网页内容，整理讯息，计算网页的显示方式并显示页面</li></ul><h2 id="Web标准"><a href="#Web标准" class="headerlink" title="Web标准"></a>Web标准</h2><ul><li>Web标准是由W3C组织和其他标准化组织定制的一系列标准的的集合</li><li>为什么需要Web标准？<br>浏览器不同，显示的页面和排版就有差异</li><li>Web标准的构成<br>结构：整理和分类网页元素，主要是HTML<br>表现：设置网页的版式，颜色，大小等外观格式，主要是CSS<br>行为：网页模型的定义以及交互的编写，主要是JavaScript</li><li>因此，结构写进HTML文件中，表现写到CSS文件中，行为写到Javascript文件中</li></ul><h2 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h2><h3 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h3><ul><li>基本语法概述</li></ul><ol><li>HTML标签是由尖括号包围的关键词 eg <html></li><li>HTML标签通常是成对出现的 eg <html></html>称为双标签，第一个是开始标签，第二个是结束标签</li><li>特殊标签 eg </br> 称之为单标签</li></ol><ul><li>标签关系</li></ul><ol><li>包含关系</li><li>并列关系</li></ol><h3 id="基本结构标签"><a href="#基本结构标签" class="headerlink" title="基本结构标签"></a>基本结构标签</h3><ul><li> 每一个网页都有一个基本标签结构，称为骨架标签；HTML页面也称为HTML文档</li></ul><ol><li><html></html>页面中最大的标签，称为根标签</li><li><p>文档的头部，注意在其中必须设置的标签是title</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><title></title>让页面有属于自己的网页标题</li><li><body></body>文档的主题 元素包含文档的所有内容，页面的内容基本都是放进body里面</li></ol><h3 id="网页开发工具"><a href="#网页开发工具" class="headerlink" title="网页开发工具"></a>网页开发工具</h3><ul><li>字符集</li></ul><ol><li>在head标签内，可以通过meta标签的charset属性规定HTML文档应该使用哪种字符编码</li><li>UTF-8 万国码，基本包括了全世界所有国家所需要的字符</li><li>&lt;! DOCTYPE html&gt;文档声明类型标签，告诉浏览器这个页面采取html5版本来显示页面</li><li><html lang="en">告诉浏览器或者搜索引擎这个是一个英文网站，本页面将采用英文来显示</li><li><mata charset="UTF-8">必须写，否则乱码。</li></ol><h3 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h3><h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><ol><li><p>格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>-<span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>为head缩写，在标签内的字体会变大变粗</p></li><li><p>由1-6大小逐渐递减</p></li></ol><h4 id="段落和换行标签"><a href="#段落和换行标签" class="headerlink" title="段落和换行标签"></a>段落和换行标签</h4><ol><li><p>标签用于定义段落 paragraph</li><li><p></br>换行标签 break row</p></li></ol><h4 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h4><ol><li>加粗<strong></strong>或者<b></b></li><li>倾斜<em></em>或者<i></i></li><li>删除线<del></del>或者<s></s></li><li>下划线<ins></ins>或者<u></u></li></ol><h4 id="div和span标签"><a href="#div和span标签" class="headerlink" title="div和span标签"></a>div和span标签</h4><ol><li><p>没有语义，只是一个盒子，用来装内容的</p></li><li><p>division表示分割 分区 span表示跨度 跨距</p></li><li><div>标签用来布局，但是现在一行只能放一个div大盒子</li><li><p><span>标签用来布局，一行上面可以放多个span小盒子</p></li></ol><h4 id="图像标签和路径"><a href="#图像标签和路径" class="headerlink" title="图像标签和路径"></a>图像标签和路径</h4><ul><li>图像标签</li></ul><ol><li><p><img>标签用于定义HTML页面中的图像:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span>/&gt;</span> </span><br><span class="line">其中src是img标签的必须属性，他用于指定图像文件路径和文件名</span><br></pre></td></tr></table></figure></li><li><p>图像标签的其他属性</p><table><thead><tr><th>属性</th><th>含义</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本，当图像不能显示时 用文本代替</td></tr><tr><td>title</td><td>文本</td><td>提示文本 鼠标放到上面时显示的文字</td></tr><tr><td>width</td><td>像素</td><td>设置图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像的高度</td></tr><tr><td>border</td><td>像素</td><td>设置图片的边框粗细</td></tr></tbody></table></li></ol><ol start="3"><li>图像标签的路径<ul><li>相对路径 文件夹下地址</li><li>绝对路径 绝对地址 带盘符 在default browser里面打开才能显示</li></ul></li></ol><h4 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h4><ul><li><p><a>标签用于定义超链接，从一个页面链接跳转到另一个</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>超链接标签的属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">anchor 锚</span><br><span class="line">href 用于指定链接目标url地址</span><br><span class="line">target 用于指定页面的打开方式</span><br><span class="line">      self 为默认值</span><br><span class="line">      blank 为在新窗口中打开</span><br></pre></td></tr></table></figure></li><li><p>链接的分类</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">外部链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">内部链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;index.html&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">空链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;#&quot;</span>&gt;</span>公司地址<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">下载链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img.zip&quot;</span>&gt;</span>下载文件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">网页元素链接</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>  = <span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">&quot;img.jpg&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">定位到某个位置</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">&quot;#two&quot;</span>&gt;</span>第二集<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 或者 <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>第二集介绍<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h4><ul><li><p>总览</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>用于定义表格</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>用于定义表格中的行，必须嵌套在<span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>中</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>用于定义表格中的单元格 必须嵌套在<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>中</span><br></pre></td></tr></table></figure></li><li><p>表头单元格标签 <th></th></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表格属性                    align(left,right,center)规定表格相对周围元素的对齐方式</span><br><span class="line">border(1 or &quot;&quot;)规定表格是否拥有边框</span><br><span class="line">cellpadding(像素值)规定单元边沿预期内容之间的空白，默认1像素</span><br><span class="line">cellspacing(像素值)规定单元格之间的空白，默认2像素</span><br><span class="line">width(像素 or 百分比)规定表格的宽度</span><br></pre></td></tr></table></figure></li><li><p>表格结构标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span>标签控制表格的头部区域</span><br><span class="line"><span class="tag">&lt;<span class="name">thbody</span>&gt;</span>标签控制表格的主体区域</span><br><span class="line">作用:更好的分清楚结构</span><br></pre></td></tr></table></figure></li><li><p>合并单元格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">跨行合并：rowspan = &quot;合并单元格的个数&quot;</span><br><span class="line">跨列合并：colspan = &quot;合并单元格的个数&quot;</span><br><span class="line">记得删除多余的单元格</span><br></pre></td></tr></table></figure></li></ul><h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><ul><li><p>无序列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>标签下面嵌套<span class="tag">&lt;<span class="name">li</span>&gt;</span>标签</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>标签不能嵌入其他无关标签</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>里面可以放任何标签</span><br></pre></td></tr></table></figure></li><li><p>有序列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span>标签</span><br></pre></td></tr></table></figure></li><li><p>自定义列表</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span>标签，与<span class="tag">&lt;<span class="name">dt</span>&gt;</span>(定义项目 or 名字)和<span class="tag">&lt;<span class="name">dd</span>&gt;</span>(描述每一个项目 or 名字)一起使用</span><br></pre></td></tr></table></figure></li></ul><h4 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h4><ul><li><p>表单由表单域，表单控件（元素）和提示信息三个部分构成</p></li><li><p>表单域 <form></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">action = &quot;url&quot;用于指定接收并处理表单数据的服务器程序的url地址</span><br><span class="line">method = &quot;get/post&quot;用于设置表单的提交方式</span><br><span class="line">name = &quot;表单域名称&quot;</span><br></pre></td></tr></table></figure></li><li><p>表单控件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br><span class="line">type = &quot;属性值&quot;</span><br><span class="line">单标签</span><br><span class="line">其他属性：</span><br><span class="line">name 自定义 定义input元素名称</span><br><span class="line">value 自定义 定义input元素的值</span><br><span class="line">checked checked 规定此元素首次加载时应当被选用</span><br><span class="line">maxlength 正整数 规定输入字段字符的最大长度</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">用于绑定一个表单元素 当点击label标签中的文本时，浏览器会自动将焦点转到对应元素上</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span>,记得加id</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">定义下拉列表</span><br><span class="line">格式为<span class="tag">&lt;<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">可以在option里面加selected 表示当前项为默认选中项</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h</summary>
      
    
    
    
    <category term="前端基础" scheme="https://zlinni.github.io/categories/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="HTML" scheme="https://zlinni.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>数据库</title>
    <link href="https://zlinni.github.io/2021/11/29/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://zlinni.github.io/2021/11/29/%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2021-11-29T12:20:49.000Z</published>
    <updated>2021-11-30T08:49:01.485Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="数据库安装"><a href="#数据库安装" class="headerlink" title="数据库安装"></a>数据库安装</h2><ol><li><p>下载地址：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p></li><li><p>解压到相应目录 并在目录下配置my.ini文件，信息如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"> </span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=C:\\web\\mysql-<span class="number">8.0</span>.<span class="number">11</span></span><br><span class="line"><span class="comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span></span><br><span class="line"><span class="comment"># datadir=C:\\web\\sqldata</span></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">20</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br></pre></td></tr></table></figure></li><li><p>启动数据库</p><p>使用管理员身份开启cmd，切换目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\.....\bin</span><br></pre></td></tr></table></figure><p>初始化数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure><p>得到密码：（记得保存）</p><p>安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql install</span><br></pre></td></tr></table></figure><p>启动命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure></li><li><p>登陆数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h localhost -u username -p</span><br></pre></td></tr></table></figure></li></ol><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><ol><li><p>查看当前所有的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases</span><br></pre></td></tr></table></figure></li><li><p>打开指定的库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use 库名</span><br></pre></td></tr></table></figure></li><li><p>查看当前库的所有表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables</span><br></pre></td></tr></table></figure></li><li><p>查看其他库的所有表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables from 库名</span><br></pre></td></tr></table></figure></li><li><p>创建表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名（</span><br><span class="line"> 列名 列类型,</span><br><span class="line"> 列名 列类型,</span><br><span class="line"> ）</span><br></pre></td></tr></table></figure></li><li><p>查看表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名</span><br></pre></td></tr></table></figure></li><li><p>查看服务器的版本</p><ul><li><p>方式一：登录到mysql服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select version()</span><br></pre></td></tr></table></figure></li><li><p>方式二：没有登陆到mysql服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql --version</span><br></pre></td></tr></table></figure></li><li><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql --V</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h2><ol><li><p>不区分大小写，但建议关键字大写，表名，列名小写</p></li><li><p>每条命令最好用分号结尾</p></li><li><p>每条命令根据需要换行</p></li><li><p>注释 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单行注释 #注释文字</span><br><span class="line">单行注释 -- 注释文字</span><br><span class="line">多行注释 /* 注释文字 */</span><br></pre></td></tr></table></figure></li></ol><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ol><li>ctrl + enter 执行当前语句</li></ol><h2 id="DQL语言的学习"><a href="#DQL语言的学习" class="headerlink" title="DQL语言的学习"></a>DQL语言的学习</h2><h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 查询列表 from 表名</span><br></pre></td></tr></table></figure><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol><li><p>查询的结果集 是一个虚拟表</p></li><li><p>select 查询列表 类似于system.out.println()</p></li><li><p>select后面跟的查询列表，可以有多个部分组成，中间用逗号隔开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段1,字段2,表达式 from 表</span><br></pre></td></tr></table></figure></li></ol><h4 id="查询常量"><a href="#查询常量" class="headerlink" title="查询常量"></a>查询常量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 100;</span><br></pre></td></tr></table></figure><h4 id="查询表达式"><a href="#查询表达式" class="headerlink" title="查询表达式"></a>查询表达式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 100%3;</span><br></pre></td></tr></table></figure><h4 id="查询单个字段"><a href="#查询单个字段" class="headerlink" title="查询单个字段"></a>查询单个字段</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;last_name&#x27; from &#x27;employees&#x27;; 引号注意</span><br></pre></td></tr></table></figure><h4 id="查询所有字段"><a href="#查询所有字段" class="headerlink" title="查询所有字段"></a>查询所有字段</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from &#x27;employees&#x27;; 引号注意</span><br></pre></td></tr></table></figure><h4 id="查询函数"><a href="#查询函数" class="headerlink" title="查询函数"></a>查询函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select databases();</span><br><span class="line">select version();</span><br><span class="line">select user();</span><br></pre></td></tr></table></figure><h4 id="起别名"><a href="#起别名" class="headerlink" title="起别名"></a>起别名</h4><p>方式一 使用as关键字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select user() as 用户名;</span><br><span class="line">select user() as &quot;用户名&quot;;</span><br><span class="line">select user() as &#x27;用户名&#x27;;</span><br></pre></td></tr></table></figure><p>方式二使用空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select user() 用户名;</span><br><span class="line">select last_name &quot;姓 名&quot; from employee;</span><br></pre></td></tr></table></figure><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>查询first_name 和 last_name 拼接成的全名 ==不一致==</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select first_name + last_name as &quot;姓名&quot; from employees;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select concat(first_name,last_name) as &quot;姓 名&quot; from employees;</span><br></pre></td></tr></table></figure><p>==特别注意== concat中的字段有null值 后续整个连接的字段都是null</p><p>解决办法： 使用ifnull</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT IFNULL(commission_pct,&#x27;空&#x27;) FROM employees;</span><br><span class="line"># 若该字段为null，则输出“空” 若不为null 原样输出</span><br></pre></td></tr></table></figure><h4 id="distinct的使用"><a href="#distinct的使用" class="headerlink" title="distinct的使用"></a>distinct的使用</h4><p>查询员工涉及到的部门编号有哪些 使用distinct关键词达成去重的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT department_id FROM employees;</span><br></pre></td></tr></table></figure><h4 id="查看表的结构"><a href="#查看表的结构" class="headerlink" title="查看表的结构"></a>查看表的结构</h4><p>两种方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DESC employees;</span><br><span class="line">SHOW COLUMNS FROM employees;</span><br></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT 查询列表</span><br><span class="line">FROM 表名</span><br><span class="line">WHERE 筛选条件;</span><br></pre></td></tr></table></figure><h4 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h4><ol><li>from字句</li><li>where字句</li><li>select字句</li></ol><h4 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h4><ol><li><p>按关系表达式筛选 ==注意== 在mysql中使用&lt;&gt;作为不等于号</p></li><li><p>逻辑运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and</span><br><span class="line">or</span><br><span class="line">not</span><br></pre></td></tr></table></figure></li><li><p>mysql特有的 模糊查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">like</span><br><span class="line">in</span><br><span class="line">between and</span><br><span class="line">is null</span><br></pre></td></tr></table></figure></li></ol><h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><h5 id="like"><a href="#like" class="headerlink" title="like"></a>like</h5><ul><li><p>功能: 一般和通配符搭配使用，对字符型数据进行部分匹配查询</p></li><li><p>常见的通配符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_ 任意单个字符</span><br><span class="line">% 任意多个字符</span><br></pre></td></tr></table></figure></li><li><p>案例一 查询姓名中包含字符a的员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employees WHERE last_name LIKE &#x27;%a%&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>案例二 查询姓名中包含最后一个字符为e的员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employees WHERE last_name LIKE &#x27;%e&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>案例三 查询姓名中包含第一个字符为e的员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employees WHERE last_name LIKE &#x27;e%&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>案例四 查询姓名中包含第三个字符为x的员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employees WHERE last_name LIKE &#x27;__x%&#x27;;</span><br><span class="line">#此处两个下划线</span><br></pre></td></tr></table></figure></li><li><p>案例五 查询姓名中包含第三个字符为_的员工信息 使用转义字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employees WHERE last_name LIKE &#x27;__\_%&#x27;;</span><br><span class="line">SELECT * FROM employees WHERE last_name LIKE &#x27;__$_%&#x27; ESCAPE &#x27;$&#x27;;</span><br><span class="line">#设置$为转义字符 </span><br></pre></td></tr></table></figure></li></ul><h5 id="in"><a href="#in" class="headerlink" title="in"></a>in</h5><ul><li><p>功能: 查询某字段的值是否属于指定的列表之内</p></li><li><p>语法： in(常量值1，常量值2，常量值3….)</p></li><li><p>案例一 查询部门编号是30/50/90的员工名，部门编号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select last_name,department_id </span><br><span class="line">from employees</span><br><span class="line">where department_id in(30,50,90);</span><br></pre></td></tr></table></figure></li></ul><h5 id="between-and"><a href="#between-and" class="headerlink" title="between and"></a>between and</h5><ul><li><p>function: 判断某个字段的值是否介于xx之间</p></li><li><p>grammar: between and/not between and</p></li><li><p>case1 查询部门编号是30-90之间的部门编号，员工姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select department_id,last_name</span><br><span class="line">from employees</span><br><span class="line">where department_id between 30 and 90</span><br></pre></td></tr></table></figure></li></ul><h5 id="is-null"><a href="#is-null" class="headerlink" title="is null"></a>is null</h5><ul><li><p>function:判断某个字段的数值是否为空</p></li><li><p>case1 查询没有奖金的员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select *</span><br><span class="line">from employees</span><br><span class="line">where commission_pct is null</span><br></pre></td></tr></table></figure></li><li><p>特点：= 能判断普通的内容，is只能判断null值</p></li></ul><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT 查询列表</span><br><span class="line">FROM 表名</span><br><span class="line">WHERE 筛选条件</span><br><span class="line">ORDER BY 排序列表</span><br></pre></td></tr></table></figure><h4 id="执行顺序-1"><a href="#执行顺序-1" class="headerlink" title="执行顺序"></a>执行顺序</h4><ol><li>from</li><li>where</li><li>select</li><li>order by</li></ol><h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h4><ul><li>排序列表可以是单个字段，多个字段，表达式，函数，列数，以及以上的组合</li><li>升序 通过asc 默认</li><li>降序 通过 desc </li><li>根据执行顺序可以用别名排序</li></ul><h4 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h4><ul><li><p>LENGTH 获取字节长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY LENGTH(last_name);</span><br></pre></td></tr></table></figure></li><li><p>CHAR_LENGTH 获取字符个数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY CHAR_LENGTH(&#x27;&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>SUBSTR 拼接字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUBSTR(&#x27;xxx&#x27;,起始索引,截取的字符长度);</span><br><span class="line">起始索引从1开始 </span><br><span class="line">可以不写截取的字符长度 代表后续全部</span><br></pre></td></tr></table></figure></li><li><p>INSTR 获取字符第一次出现的索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT INSTR(&#x27;AAAAAXCCACACACC&#x27;,&#x27;X&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>TRIM 去前后指定的字符 默认去掉空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT TRIM(&#x27;   a  &#x27;) AS b</span><br><span class="line">SELECT TRIM(&#x27;X&#x27; FORM &#x27;XXXXXXXAXXXXXXXXX&#x27;) AS a</span><br></pre></td></tr></table></figure></li><li><p>LPAD/RPAD 左填充/右填充</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LPAD(&#x27;XXX&#x27;,10,&#x27;A&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>STRCMP 比较两个字符大小 大就返回1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT STRCMP(&#x27;abc&#x27;,&#x27;afc&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>UPPER/LOWER 变大写/小写</p></li></ul><h4 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h4><ul><li>ABS 绝对值</li><li>CELL 向上取整 返回≥该参数的最小整数</li><li>FLOOR 向下取整</li><li>ROUND 四舍五入</li><li>TRUNCATE 截断</li><li>MOD 取余 </li></ul><h4 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h4><ul><li>NOW() 现在的时间</li><li>CURDATE</li><li>CURTIME</li><li>DATEDIFF 日期差</li><li>DATE_FORMAT() 转换日期格式</li><li>STR_TO_DATE </li></ul><h4 id="流程控制函数"><a href="#流程控制函数" class="headerlink" title="流程控制函数"></a>流程控制函数</h4><ul><li><p>IF</p></li><li><p>CASE </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE 表达式</span><br><span class="line">WHEN X THEN 结果1 </span><br><span class="line">WHEN X THEN 结果2</span><br><span class="line">...</span><br><span class="line">ELSE 结果n</span><br><span class="line">END</span><br></pre></td></tr></table></figure></li></ul><h4 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h4><ul><li>sum</li><li>avg</li><li>max</li><li>min</li><li>count</li><li>分组前筛选 where</li><li>分组后筛选 having</li></ul><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><ul><li><p>内连接 INNER JOIN ON</p></li><li><p>外连接(左连接，右连接)</p></li><li><p>图解<img src="image-20210419152356373.png" alt="image-20210419152356373"><img src="image-20210419152900682.png" alt="image-20210419152900682"></p></li><li><p>自我关联</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询广东省的所有区域</span><br><span class="line">先找出市</span><br><span class="line">select a.id,a.area,a.pid from area as a join area as b on a.pid = b.id where b.area = &#x27;广东&#x27;;</span><br><span class="line">再根据市找出区</span><br><span class="line">select c.id,c.area,c.pid from area as c join () as d on c.pid = d.id </span><br></pre></td></tr></table></figure></li></ul><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><ul><li><p>查询语句中嵌套另一个select</p></li><li><p>in</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sno,sname from student where sno in(select sno from sc where cno = &#x27;C001&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>exists(重点)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回的是true/false</span><br><span class="line">select 之后加什么都可以</span><br><span class="line">与in的区别是</span><br><span class="line">in 会遍历整个表 </span><br><span class="line">exist 找到就返回</span><br></pre></td></tr></table></figure></li><li><p>not exists(重点)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>表中的每一行叫做一个记录，每个记录包含此行中所有信息</p><h3 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h3><p>表的列称之为字段</p><h3 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h3><ul><li><p>表格的字段抽象的是共性的内容，以及共同的属性，这种方式称之为实体</p></li><li><p>用矩形表示实体（对应表名），椭圆表示属性（对应字段），菱形代表关系</p></li><li><p><img src="image-20210309185356772.png" alt="image-20210309185356772"></p></li></ul><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>用于添加索引，加快搜索效率</p><h3 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h3><ul><li><p>用于引用主键的内容</p></li><li><p>经常是多的那一方设置外键</p></li><li><p>设置方法：</p><ol><li><p>在表中添加外键的字段</p><p><img src="image-20210316214817698.png" alt="image-20210316214817698"></p></li><li><p>将该字段设置为外键</p><p><img src="image-20210316214659649.png" alt="image-20210316214659649"></p></li></ol></li><li><p>删除时 更新时</p></li></ul><h3 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h3><p><img src="image-20210309185737919.png" alt="image-20210309185737919"></p><h3 id="网页系统"><a href="#网页系统" class="headerlink" title="网页系统"></a>网页系统</h3><ul><li>三步骤：</li><li>原型设计</li><li>数据库建模</li><li>编写前后台程序</li></ul><h4 id="数据库建模"><a href="#数据库建模" class="headerlink" title="数据库建模"></a>数据库建模</h4><ul><li>确定实体和关系</li><li>完善整体实体关系图</li><li>根据实体关系图构建表格</li></ul><h2 id="DDL语言"><a href="#DDL语言" class="headerlink" title="DDL语言"></a>DDL语言</h2><h3 id="创建语句create"><a href="#创建语句create" class="headerlink" title="创建语句create"></a>创建语句create</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">列名1 数据类型 约束,</span><br><span class="line">    name varchar(255) unique,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="修改语句Alter"><a href="#修改语句Alter" class="headerlink" title="修改语句Alter"></a>修改语句Alter</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名(</span><br><span class="line">add column 列名 类型 #添加新的字段</span><br><span class="line">    change column 旧列名 新列名 新列类型 #更改字段名称</span><br><span class="line">    modify column 列名 类型 #修改字段类型</span><br><span class="line">    drop column 列名 #删除字段</span><br><span class="line">    rename to 新表名 #表格重命名</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="删除语句Drop"><a href="#删除语句Drop" class="headerlink" title="删除语句Drop"></a>删除语句Drop</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名</span><br></pre></td></tr></table></figure><h3 id="清除语句Truncate"><a href="#清除语句Truncate" class="headerlink" title="清除语句Truncate"></a>清除语句Truncate</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truncate table 表名</span><br></pre></td></tr></table></figure><ul><li>删除表中的所有记录单表结构保留</li></ul><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><ul><li><p>约束的实质就是表中数据的限制条件，为了报纸表中的记录<strong>完整和有效</strong></p></li><li><p>分为五种约束</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">非空约束 not null 后面加</span><br><span class="line">唯一性约束 unique 后面加</span><br><span class="line">主键约束 primary key 后面加</span><br><span class="line">外键约束 foreign key </span><br><span class="line">eg</span><br><span class="line">foregin key(外键字段) references 表名(主键字段) </span><br><span class="line">默认 default</span><br><span class="line">eg</span><br><span class="line">name varchar(20) default &#x27;zhangsan&#x27;</span><br></pre></td></tr></table></figure></li></ul><h3 id="约束分类"><a href="#约束分类" class="headerlink" title="约束分类"></a>约束分类</h3><ul><li>表级约束和列级约束 非空约束不能用于表级约束</li></ul><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><ul><li>略</li></ul><h2 id="DML数据操作语句"><a href="#DML数据操作语句" class="headerlink" title="DML数据操作语句"></a>DML数据操作语句</h2><h3 id="增加语句insert"><a href="#增加语句insert" class="headerlink" title="增加语句insert"></a>增加语句insert</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 (字段1,字段2) values (值1,值2);</span><br></pre></td></tr></table></figure><h3 id="删除语句delete"><a href="#删除语句delete" class="headerlink" title="删除语句delete"></a>删除语句delete</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名</span><br></pre></td></tr></table></figure><h3 id="更新语句update"><a href="#更新语句update" class="headerlink" title="更新语句update"></a>更新语句update</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 列名=值</span><br></pre></td></tr></table></figure><h2 id="DTL事务控制语句"><a href="#DTL事务控制语句" class="headerlink" title="DTL事务控制语句"></a>DTL事务控制语句</h2><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><ul><li><p>什么是事务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">—事务（Transaction）是访问和更新数据库的程序执行单元；事务中可能包含一个或多个sql语句，这些语句要么都执行，要么都不执行。</span><br></pre></td></tr></table></figure></li><li><p>事务的基本要素ACID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原子性 </span><br><span class="line">一致性</span><br><span class="line">隔离性</span><br><span class="line">持久性</span><br></pre></td></tr></table></figure></li></ul><h3 id="事务控制语句"><a href="#事务控制语句" class="headerlink" title="事务控制语句"></a>事务控制语句</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start transaction开启事务</span><br><span class="line">commit 提交事务</span><br><span class="line">rollback 回滚事务</span><br><span class="line">set transaction 设置事务隔离级别</span><br></pre></td></tr></table></figure><h3 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h3><h4 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h4><ul><li><p>指读到了其他事务未提交的数据</p><p><img src="image-20210612110516345.png" alt="image-20210612110516345"></p></li></ul><h4 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h4><p><img src="image-20210612110553199.png" alt="image-20210612110553199"></p><h4 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h4><p><img src="image-20210612110618411.png" alt="image-20210612110618411"></p><h4 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global transaction isolation level read uncommitted;</span><br></pre></td></tr></table></figure><p><img src="image-20210612110853429.png" alt="image-20210612110853429"></p><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><h3 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create procedure 函数名(参数)</span><br><span class="line">eg</span><br><span class="line">delimiter //</span><br><span class="line">create procedure proc1()</span><br><span class="line">begin </span><br><span class="line">select * from user;</span><br><span class="line">end //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">declare c int default 0;定义一个局部变量c初始值为0</span><br><span class="line">set c=a+b 赋值</span><br><span class="line">如果是字符串类型要给出长度</span><br><span class="line">declare var1 varchar(32) default &quot;&quot;;</span><br><span class="line">且局部变量声明要放在存储过程的最开始否则出错</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@varname</span><br><span class="line">两种创建方式：</span><br><span class="line">set @num = 1;或 set @num:=1;</span><br><span class="line">select @num:=1; 或 select @num:=字段名 from 表名 where </span><br><span class="line">用select必须用:=</span><br><span class="line"></span><br><span class="line">输出用户变量：select</span><br><span class="line"></span><br><span class="line">如果直接写 select @name:=password from user;</span><br><span class="line">则是@name变量的值是最后一条记录的值</span><br></pre></td></tr></table></figure><h3 id="存储过程的参数"><a href="#存储过程的参数" class="headerlink" title="存储过程的参数"></a>存储过程的参数</h3><p>三种存储类型in out inout</p><ul><li><p>IN 输入参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line">create proceduce demo1(IN p_in int)</span><br><span class="line">BEGIN</span><br><span class="line">SELECT p_in;</span><br><span class="line">SET p_in = 2;</span><br><span class="line">SELECT p_in;</span><br><span class="line">END //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure></li><li><p>OUT 输出参数</p></li><li><p>INOUT 输入输出参数</p></li></ul><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><ul><li><p>call</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call procedure(参数)</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h3><ul><li><p>drop</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop procedure 存储过程名称</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h3><ul><li><p>alter</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter procedure 存储过程名称 [特征]</span><br></pre></td></tr></table></figure></li></ul><h3 id="存储过程的控制语句"><a href="#存储过程的控制语句" class="headerlink" title="存储过程的控制语句"></a>存储过程的控制语句</h3><ul><li><p>if-then-else</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if condition1 then&#123;&#125;</span><br><span class="line">elseif condition2 then</span><br><span class="line">else</span><br><span class="line">end if;</span><br></pre></td></tr></table></figure></li><li><p>例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER //</span><br><span class="line">CREATE PROCEDURE IncomeLevel (IN monthly_value INT, OUT income_level VARCHAR(32))</span><br><span class="line">BEGIN</span><br><span class="line">   IF monthly_value &lt;= 4000 THEN</span><br><span class="line">      SET income_level = &#x27;Low Income&#x27;;</span><br><span class="line">   ELSEIF monthly_value &gt; 4000 AND monthly_value &lt;= 7000 THEN</span><br><span class="line">      SET income_level = &#x27;Avg Income&#x27;;</span><br><span class="line">   ELSE</span><br><span class="line">      SET income_level = &#x27;High Income&#x27;;</span><br><span class="line">   END IF;</span><br><span class="line">   SELECT income_level;</span><br><span class="line">END; //</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure></li><li><p>case when</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">case case_value </span><br><span class="line">when xxx then xxx</span><br><span class="line">when xxx then xxx</span><br><span class="line">else xxx</span><br><span class="line">end case</span><br></pre></td></tr></table></figure></li><li><p>例子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER //  </span><br><span class="line">CREATE PROCEDURE proc3 (in parameter int)  </span><br><span class="line">  begin </span><br><span class="line">case parameter</span><br><span class="line">        when 1 then   </span><br><span class="line">          insert into table1 values(1,&#x27;tom&#x27;);  </span><br><span class="line">        when 2 then   </span><br><span class="line">          insert into table1 values(2,&#x27;lili&#x27;);  </span><br><span class="line">        else   </span><br><span class="line">          insert into table1 values(3,&#x27;lucy&#x27;);  </span><br><span class="line">    end case;  </span><br><span class="line">  end //  </span><br><span class="line">DELIMITER ; </span><br></pre></td></tr></table></figure></li><li><p>while</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while 条件 do</span><br><span class="line">代码</span><br><span class="line">end while;</span><br></pre></td></tr></table></figure></li><li><p>repeat</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">repeat </span><br><span class="line">code</span><br><span class="line">until 条件 end repeat</span><br><span class="line">条件判断在结尾</span><br></pre></td></tr></table></figure></li></ul><h2 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h2><h3 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h3><ul><li>传统的集合运算是二目运算，关系看成元组的集合，其运算关系是从关系的水平方向，即从行的角度进行，有<strong>并，差，交，笛卡尔积</strong>四种运算</li><li>单目运算 一个运算符 eg i++</li><li>双目运算 两个运算符 a+b</li><li>三目运算 三个运算符 a?b:c</li></ul><h3 id="差集"><a href="#差集" class="headerlink" title="差集"></a>差集</h3><p><img src="image-20210614154358625.png" alt="image-20210614154358625"></p><h3 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h3><ul><li>R1和R2的笛卡尔积  R3=R1XR2<img src="image-20210614154559529.png" alt="image-20210614154559529"></li></ul><h3 id="关系运算-1"><a href="#关系运算-1" class="headerlink" title="关系运算"></a>关系运算</h3><ul><li>从操作关系个数上说，分为一元关系操作和二元关系操作。</li><li>一元关系操作包括对==单个==关系进行==垂直分解的投影运算==和进行==水平分解的选择运算==</li><li>二元操作关系则是对==两个==关系进行操作，包括==链接运算和除运算==</li></ul><h4 id="一元关系"><a href="#一元关系" class="headerlink" title="一元关系"></a>一元关系</h4><h1 id="sql考试"><a href="#sql考试" class="headerlink" title="sql考试"></a>sql考试</h1><ul><li>选择题</li><li>简答题（七选四）</li><li>大题<ol><li>查询语句</li><li>数据库设计( 画er图)</li><li>关系代数（一道大题）<img src="image-20210609092445195.png" alt="image-20210609092445195"></li></ol></li></ul><h1 id="sql考试简答"><a href="#sql考试简答" class="headerlink" title="sql考试简答"></a>sql考试简答</h1><h2 id="数据库系统体系结构有多少层"><a href="#数据库系统体系结构有多少层" class="headerlink" title="数据库系统体系结构有多少层"></a>数据库系统体系结构有多少层</h2><p>分为三层：外部层，概念层和内部层</p><p><img src="image-20210609090933593.png" alt="image-20210609090933593"></p><h2 id="什么是事务，简单的阐述一下事务的原子性"><a href="#什么是事务，简单的阐述一下事务的原子性" class="headerlink" title="什么是事务，简单的阐述一下事务的原子性"></a>什么是事务，简单的阐述一下事务的原子性</h2><p>事务（Transaction）是访问和更新数据库的程序执行单元；</p><p>原子性是指一个事务是一个不可分割的工作单位，其中的操作要么都做，要么都不做</p><h2 id="常见的数据库故障有多少种"><a href="#常见的数据库故障有多少种" class="headerlink" title="常见的数据库故障有多少种"></a>常见的数据库故障有多少种</h2><p>5种；事务内部的故障，系统故障，介质故障，计算机病毒故障，用户操作错误</p><h2 id="关系代数的基本运算有哪些"><a href="#关系代数的基本运算有哪些" class="headerlink" title="关系代数的基本运算有哪些"></a>关系代数的基本运算有哪些</h2><p>五种。并 差 投影 选择 笛卡尔积</p><h2 id="等值连接和自然连接的区别"><a href="#等值连接和自然连接的区别" class="headerlink" title="等值连接和自然连接的区别"></a>等值连接和自然连接的区别</h2><ol><li>自然连接一定是等值连接，但等值连接不一定是自然连接</li><li>等值连接要求的分量不一定是公共属性；而自然连接要求相等的分量必须是公共属性</li><li>等值连接不把重复的属性除去，而自然连接要把重复的属性除去</li></ol><h2 id="为什么外键属性的值有时候可以为空"><a href="#为什么外键属性的值有时候可以为空" class="headerlink" title="为什么外键属性的值有时候可以为空"></a>为什么外键属性的值有时候可以为空</h2><p>外键可以为空,一个表的关键的标识是主键,外键是否为空不影响表的结构及数据库设计概念的.外键只起个关联表的作用.</p><h2 id="数据库的完整性约束有哪些子句"><a href="#数据库的完整性约束有哪些子句" class="headerlink" title="数据库的完整性约束有哪些子句"></a>数据库的完整性约束有哪些子句</h2><ol><li>not null 非空约束x</li><li>unique 唯一约束</li><li>primary key 主键约束</li><li>foreign key 外键约束</li><li>default 默认约束</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;h2 id=&quot;数据库安装&quot;&gt;&lt;a href=&quot;#数据库安装&quot; class=&quot;headerlink&quot; title=&quot;数据库安装&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    
    <category term="sql" scheme="https://zlinni.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zlinni.github.io/2021/11/29/hello-world/"/>
    <id>https://zlinni.github.io/2021/11/29/hello-world/</id>
    <published>2021-11-29T11:14:54.728Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
